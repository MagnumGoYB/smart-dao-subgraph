"""
Statistic
"""
type Statistic @entity {
  "ID (hash)"
  id: ID!
  "Total DAOs"
  totalDAOs: BigInt!
  "Total Members"
  totalMembers: BigInt!
  "Total Accounts"
  totalAccounts: BigInt!
  "Total Proposals"
  totalProposals: BigInt!
}

"""
DAO
"""
type DAO @entity {
  "ID (hash) - Contract Address"
  id: ID!
  "Creator"
  creator: Member
  "Executor"
  executor: Member
  "Name"
  name: String
  "Mission"
  mission: String
  "Description"
  description: String
  "Image URL"
  image: String
  "Extend Data"
  extend: Bytes
  "Member Info"
  memberInfo: MemberInfo
  "vote Pool"
  votePool: VotePool
  "Ledger Pool"
  ledgerPool: LedgerPool
  "Asset Pool"
  assetPool: AssetPool
  "Block ID (hash)"
  blockId: ID!
  "Block Number"
  blockNumber: BigInt!
  "Block Timestamp"
  blockTimestamp: BigInt!
  "Accounts"
  accounts: [Account!]!
}

"""
Member Info
"""
type MemberInfo @entity {
  "ID (hash) - Contract Address"
  id: ID!
  "Belong DAO"
  dao: DAO!
  "Members"
  members: [Member!] @derivedFrom(field: "infoBy")
  "Name"
  name: String
  "Member Count"
  count: BigInt!
}

"""
Member
"""
type Member @entity {
  "ID (hash) - (DAO Address).concat('-').concat(tokenId)"
  id: ID!
  "721 Token ID"
  tokenId: BigInt!
  "Account"
  account: Account!
  "Name"
  name: String
  "Description"
  description: String
  "Head Image URL"
  image: String
  "Vote Power"
  votes: BigInt
  "Info By"
  infoBy: MemberInfo!
}

"""
Account
"""
type Account @entity {
  "ID (hash) - Wallet Address"
  id: ID!
  "Belong DAOs"
  daos: [DAO!]! @derivedFrom(field: "accounts")
}

"""
Vote Pool
"""
type VotePool @entity {
  "ID (hash) - Contract Address"
  id: ID!
  "Belong DAO"
  dao: DAO!
  "Proposals"
  proposals: [Proposal!] @derivedFrom(field: "votePool")
  "Proposals Count"
  count: BigInt!
}

"""
Vote Proposal
"""
type Proposal @entity {
  "ID (hash)"
  id: ID!
  "Belong Vote Pool"
  votePool: VotePool!
  "is Anonymous"
  isAnonymous: Boolean!
  "Origin Member - Is Anonymous, is Null"
  origin: Member
  "Origin Address"
  originAddress: Bytes!
  "Name"
  name: String
  "Description"
  description: String
  "Lifespan"
  lifespan: BigInt
  "Expiry"
  expiry: BigInt
  "Target Address[]"
  target: [Bytes!]
  "Data Bytes[]"
  data: [Bytes!]
  "Pass Rate"
  passRate: BigInt
  "Loop Count"
  loopCount: BigInt
  "Loop Time"
  loopTime: BigInt
  "Vote Total"
  voteTotal: BigInt
  "Agree Total"
  agreeTotal: BigInt
  "Execute Time"
  executeTime: BigInt
  "Is Agree"
  isAgree: Boolean
  "Is Close"
  isClose: Boolean
  "Is Executed"
  isExecuted: Boolean
  "Time"
  time: BigInt
  "Modify Time"
  modifyTime: BigInt
  "Block ID (hash)"
  blockId: ID!
  "Block Number"
  blockNumber: BigInt!
  "Block Timestamp"
  blockTimestamp: BigInt!
}

"""
Ledger Pool
"""
type LedgerPool @entity {
  "ID (hash) - Contract Address"
  id: ID!
  "Belong DAO"
  dao: DAO!
  "Ledgers"
  ledgers: [Ledger!] @derivedFrom(field: "ledgerPool")
  "Ledgers Count"
  count: BigInt!
}

enum LedgerType {
  Reserved
  Receive
  Deposit
  Withdraw
  Release
  AssetIncome
}

enum State {
  Enable
  Disable
}

"""
Ledger
"""
type Ledger @entity {
  "ID (hash) - address.concat('-').concat(txHash)"
  id: ID!
  "Address"
  address: Bytes!
  "Belong Ledger Pool"
  ledgerPool: LedgerPool!
  "Tx Hash"
  txHash: Bytes!
  "DAO Host"
  dao: DAO!
  "Type"
  type: LedgerType
  "Name"
  name: String
  "Description"
  description: String
  "Target Address"
  target: Bytes
  "Amount"
  balance: BigInt
  "Block ID (hash)"
  blockId: ID!
  "Block Number"
  blockNumber: BigInt!
  "Block Timestamp"
  blockTimestamp: BigInt!
  "Member ID"
  member: BigInt
  "Enable State"
  state: State!
  # assetIncome_id: number;
  # assetIncome?: LedgerAssetIncome;
}

"""
Asset Pool
"""
type AssetPool @entity {
  "ID (hash) - Contract Address"
  id: ID!
  "Belong DAO"
  dao: DAO!
  "Assets"
  assets: [Asset!] @derivedFrom(field: "assetPool")
  "Assets Count"
  count: BigInt!
}

# Asset {
#   id: number;
#   host: string; // dao address
#   token: string; // 合约地址
#   tokenId: string; // id
#   uri: string; // tokenURI
#   owner: string; // 属主
#   author: string; // 作者地址
#   selling: Selling; // 最后上架销售类型: 0未销售,1销售opensea,2其它平台
#   sellPrice: string; // 最后上架销售价格
#   minimumPrice: string; // 最小销售价格
#   state: State; // 状态: 0正常,1删除
#   time: number; // 数据入库时间
#   modify: number; // 修改时间（非链上数据修改）
#   name: string; //                   varchar (256)  default ('') not null,  -- 名称
#   imageOriign: string; //            varchar (512)  default ('') not null,  -- origin image uri
#   mediaOrigin: string; //            varchar (512)  default ('') not null,  -- origin media uri
#   description: string; //            varchar (2048) default ('') not null,  -- 详细信息
#   externalLink: string; //           varchar (512)  default ('') not null,  -- 外部链接
#   properties: any | null; //         json                            null,  -- 附加信息
#   blockNumber: number; //            int            default (0)  not null,  -- 创建区块号
#   backgroundColor: string; //        varchar (32)   default ('') not null,  -- 背景
#   categorie: number; //              int            default (0)  not null,  -- 类别
#   retry: number; //                  int            default (0)  not null   -- 抓取数据重试次数, sync uri data retry count
#   retryTime: number; //              bigint         default (0)  not null,  -- 抓取数据最后重试时间
#   totalSupply: string; //            varchar (66)                not null    -- total supply
#   assetType: AssetType; //          int                         not null   -- asset type, 721/1155
# }
"""
Asset
"""
type Asset @entity {
  "ID (hash) - (DAO Address).concat('-').concat(tokenId)"
  id: ID!
  "ERC-1155 Token ID"
  tokenId: BigInt!
  "Belong Asset Pool"
  assetPool: AssetPool!
  "Address"
  address: Bytes!
  "Token URI"
  uri: String
  "Name"
  name: String
  "Description"
  description: String
  "Block ID (hash)"
  blockId: ID!
  "Block Number"
  blockNumber: BigInt!
  "Block Timestamp"
  blockTimestamp: BigInt!
}
